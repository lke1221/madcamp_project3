{"ast":null,"code":"import { S as SUPPORT, C as ConfigResolverMap, _ as _objectSpread2, a as _defineProperty, t as toDomEventType, i as isTouch, b as touchIds, E as EngineMap, c as chain, d as toHandlerProp } from './actions-df922b36.esm.js';\nimport './maths-b2a210f4.esm.js';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nconst identity = v => v;\n\nconst sharedConfigResolver = {\n  target(value) {\n    if (value) {\n      return () => 'current' in value ? value.current : value;\n    }\n\n    return undefined;\n  },\n\n  enabled(value = true) {\n    return value;\n  },\n\n  window(value = SUPPORT.isBrowser ? window : undefined) {\n    return value;\n  },\n\n  eventOptions({\n    passive = true,\n    capture = false\n  } = {}) {\n    return {\n      passive,\n      capture\n    };\n  },\n\n  transform(value = identity) {\n    return value;\n  }\n\n};\nconst _excluded = [\"target\", \"eventOptions\", \"window\", \"enabled\", \"transform\"];\n\nfunction resolveWith(config = {}, resolvers) {\n  const result = {};\n\n  for (const [key, resolver] of Object.entries(resolvers)) switch (typeof resolver) {\n    case 'function':\n      result[key] = resolver.call(result, config[key], key, config);\n      break;\n\n    case 'object':\n      result[key] = resolveWith(config[key], resolver);\n      break;\n\n    case 'boolean':\n      if (resolver) result[key] = config[key];\n      break;\n  }\n\n  return result;\n}\n\nfunction parse(config, gestureKey) {\n  const _ref = config,\n        {\n    target,\n    eventOptions,\n    window,\n    enabled,\n    transform\n  } = _ref,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n  const _config = {\n    shared: resolveWith({\n      target,\n      eventOptions,\n      window,\n      enabled\n    }, sharedConfigResolver)\n  };\n\n  if (gestureKey) {\n    const resolver = ConfigResolverMap.get(gestureKey);\n    _config[gestureKey] = resolveWith(_objectSpread2({\n      shared: _config.shared\n    }, rest), resolver);\n  } else {\n    for (const key in rest) {\n      const resolver = ConfigResolverMap.get(key);\n\n      if (process.env.NODE_ENV === 'development') {\n        if (!resolver) console.warn(`[@use-gesture]: You've created a custom handler that that uses the \\`${key}\\` gesture but isn't properly configured.\\n\\nPlease add \\`${key}Action\\` when creating your handler.`);\n      }\n\n      _config[key] = resolveWith(_objectSpread2({\n        shared: _config.shared\n      }, rest[key]), resolver);\n    }\n  }\n\n  return _config;\n}\n\nclass EventStore {\n  constructor(ctrl) {\n    _defineProperty(this, \"_listeners\", []);\n\n    this._ctrl = ctrl;\n  }\n\n  add(element, device, action, handler, options) {\n    const type = toDomEventType(device, action);\n\n    const eventOptions = _objectSpread2(_objectSpread2({}, this._ctrl.config.shared.eventOptions), options);\n\n    element.addEventListener(type, handler, eventOptions);\n\n    this._listeners.push(() => element.removeEventListener(type, handler, eventOptions));\n  }\n\n  clean() {\n    this._listeners.forEach(remove => remove());\n\n    this._listeners = [];\n  }\n\n}\n\nclass TimeoutStore {\n  constructor() {\n    _defineProperty(this, \"_timeouts\", new Map());\n  }\n\n  add(key, callback, ms = 140, ...args) {\n    this.remove(key);\n\n    this._timeouts.set(key, window.setTimeout(callback, ms, ...args));\n  }\n\n  remove(key) {\n    const timeout = this._timeouts.get(key);\n\n    if (timeout) window.clearTimeout(timeout);\n  }\n\n  clean() {\n    this._timeouts.forEach(timeout => void window.clearTimeout(timeout));\n\n    this._timeouts.clear();\n  }\n\n}\n\nclass Controller {\n  constructor(handlers) {\n    _defineProperty(this, \"gestures\", new Set());\n\n    _defineProperty(this, \"_targetEventStore\", new EventStore(this));\n\n    _defineProperty(this, \"gestureEventStores\", {});\n\n    _defineProperty(this, \"gestureTimeoutStores\", {});\n\n    _defineProperty(this, \"handlers\", {});\n\n    _defineProperty(this, \"config\", {});\n\n    _defineProperty(this, \"pointerIds\", new Set());\n\n    _defineProperty(this, \"touchIds\", new Set());\n\n    _defineProperty(this, \"state\", {\n      shared: {\n        shiftKey: false,\n        metaKey: false,\n        ctrlKey: false,\n        altKey: false\n      }\n    });\n\n    resolveGestures(this, handlers);\n  }\n\n  setEventIds(event) {\n    if (isTouch(event)) {\n      this.touchIds = new Set(touchIds(event));\n    } else if ('pointerId' in event) {\n      if (event.type === 'pointerup') this.pointerIds.delete(event.pointerId);else this.pointerIds.add(event.pointerId);\n    }\n  }\n\n  applyHandlers(handlers, nativeHandlers) {\n    this.handlers = handlers;\n    this.nativeHandlers = nativeHandlers;\n  }\n\n  applyConfig(config, gestureKey) {\n    this.config = parse(config, gestureKey);\n  }\n\n  clean() {\n    this._targetEventStore.clean();\n\n    for (const key of this.gestures) {\n      this.gestureEventStores[key].clean();\n      this.gestureTimeoutStores[key].clean();\n    }\n  }\n\n  effect() {\n    if (this.config.shared.target) this.bind();\n    return () => this._targetEventStore.clean();\n  }\n\n  bind(...args) {\n    const sharedConfig = this.config.shared;\n    const eventOptions = sharedConfig.eventOptions;\n    const props = {};\n    let target;\n\n    if (sharedConfig.target) {\n      target = sharedConfig.target();\n      if (!target) return;\n    }\n\n    const bindFunction = bindToProps(props, eventOptions, !!target);\n\n    if (sharedConfig.enabled) {\n      for (const gestureKey of this.gestures) {\n        if (this.config[gestureKey].enabled) {\n          const Engine = EngineMap.get(gestureKey);\n          new Engine(this, args, gestureKey).bind(bindFunction);\n        }\n      }\n\n      for (const eventKey in this.nativeHandlers) {\n        bindFunction(eventKey, '', event => this.nativeHandlers[eventKey](_objectSpread2(_objectSpread2({}, this.state.shared), {}, {\n          event,\n          args\n        })), undefined, true);\n      }\n    }\n\n    for (const handlerProp in props) {\n      props[handlerProp] = chain(...props[handlerProp]);\n    }\n\n    if (!target) return props;\n\n    for (const handlerProp in props) {\n      let eventKey = handlerProp.substr(2).toLowerCase();\n      const capture = !!~eventKey.indexOf('capture');\n      const passive = !!~eventKey.indexOf('passive');\n      if (capture || passive) eventKey = eventKey.replace(/capture|passive/g, '');\n\n      this._targetEventStore.add(target, eventKey, '', props[handlerProp], {\n        capture,\n        passive\n      });\n    }\n  }\n\n}\n\nfunction setupGesture(ctrl, gestureKey) {\n  ctrl.gestures.add(gestureKey);\n  ctrl.gestureEventStores[gestureKey] = new EventStore(ctrl);\n  ctrl.gestureTimeoutStores[gestureKey] = new TimeoutStore();\n}\n\nfunction resolveGestures(ctrl, internalHandlers) {\n  if (internalHandlers.drag) setupGesture(ctrl, 'drag');\n  if (internalHandlers.wheel) setupGesture(ctrl, 'wheel');\n  if (internalHandlers.scroll) setupGesture(ctrl, 'scroll');\n  if (internalHandlers.move) setupGesture(ctrl, 'move');\n  if (internalHandlers.pinch) setupGesture(ctrl, 'pinch');\n  if (internalHandlers.hover) setupGesture(ctrl, 'hover');\n}\n\nconst bindToProps = (props, eventOptions, withPassiveOption) => (device, action, handler, options = {}, isNative = false) => {\n  var _options$capture, _options$passive;\n\n  const capture = (_options$capture = options.capture) !== null && _options$capture !== void 0 ? _options$capture : eventOptions.capture;\n  const passive = (_options$passive = options.passive) !== null && _options$passive !== void 0 ? _options$passive : eventOptions.passive;\n  let handlerProp = isNative ? device : toHandlerProp(device, action, capture);\n  if (withPassiveOption && passive) handlerProp += 'Passive';\n  props[handlerProp] = props[handlerProp] || [];\n  props[handlerProp].push(handler);\n};\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\n\nfunction sortHandlers(_handlers) {\n  const native = {};\n  const handlers = {};\n  const actions = new Set();\n\n  for (let key in _handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch);\n      handlers[key] = _handlers[key];\n    } else {\n      native[key] = _handlers[key];\n    }\n  }\n\n  return [handlers, native, actions];\n}\n\nfunction registerGesture(actions, handlers, handlerKey, key, internalHandlers, config) {\n  if (!actions.has(handlerKey)) return;\n  const startKey = handlerKey + 'Start';\n  const endKey = handlerKey + 'End';\n\n  const fn = state => {\n    let memo = undefined;\n    if (state.first && startKey in handlers) handlers[startKey](state);\n    if (handlerKey in handlers) memo = handlers[handlerKey](state);\n    if (state.last && endKey in handlers) handlers[endKey](state);\n    return memo;\n  };\n\n  internalHandlers[key] = fn;\n  config[key] = config[key] || {};\n}\n\nfunction parseMergedHandlers(mergedHandlers, mergedConfig) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(mergedHandlers);\n  const internalHandlers = {};\n  registerGesture(actions, handlers, 'onDrag', 'drag', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onWheel', 'wheel', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onScroll', 'scroll', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onPinch', 'pinch', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onMove', 'move', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onHover', 'hover', internalHandlers, mergedConfig);\n  return {\n    handlers: internalHandlers,\n    config: mergedConfig,\n    nativeHandlers\n  };\n}\n\nexport { Controller, parseMergedHandlers };","map":{"version":3,"sources":["C:/Android/Sdk/madcamp_project3/node_modules/@use-gesture/core/dist/use-gesture-core.esm.js"],"names":["S","SUPPORT","C","ConfigResolverMap","_","_objectSpread2","a","_defineProperty","t","toDomEventType","i","isTouch","b","touchIds","E","EngineMap","c","chain","d","toHandlerProp","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","length","indexOf","_objectWithoutProperties","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","identity","v","sharedConfigResolver","value","current","undefined","enabled","window","isBrowser","eventOptions","passive","capture","transform","_excluded","resolveWith","config","resolvers","result","resolver","entries","parse","gestureKey","_ref","rest","_config","shared","get","process","env","NODE_ENV","console","warn","EventStore","constructor","ctrl","_ctrl","add","element","device","action","handler","options","type","addEventListener","_listeners","push","removeEventListener","clean","forEach","remove","TimeoutStore","Map","callback","ms","args","_timeouts","set","setTimeout","timeout","clearTimeout","clear","Controller","handlers","Set","shiftKey","metaKey","ctrlKey","altKey","resolveGestures","setEventIds","event","pointerIds","delete","pointerId","applyHandlers","nativeHandlers","applyConfig","_targetEventStore","gestures","gestureEventStores","gestureTimeoutStores","effect","bind","sharedConfig","props","bindFunction","bindToProps","Engine","eventKey","state","handlerProp","substr","toLowerCase","replace","setupGesture","internalHandlers","drag","wheel","scroll","move","pinch","hover","withPassiveOption","isNative","_options$capture","_options$passive","RE_NOT_NATIVE","sortHandlers","_handlers","native","actions","test","RegExp","lastMatch","registerGesture","handlerKey","has","startKey","endKey","fn","memo","first","last","parseMergedHandlers","mergedHandlers","mergedConfig"],"mappings":"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","sourcesContent":["import { S as SUPPORT, C as ConfigResolverMap, _ as _objectSpread2, a as _defineProperty, t as toDomEventType, i as isTouch, b as touchIds, E as EngineMap, c as chain, d as toHandlerProp } from './actions-df922b36.esm.js';\nimport './maths-b2a210f4.esm.js';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nconst identity = v => v;\nconst sharedConfigResolver = {\n  target(value) {\n    if (value) {\n      return () => 'current' in value ? value.current : value;\n    }\n\n    return undefined;\n  },\n\n  enabled(value = true) {\n    return value;\n  },\n\n  window(value = SUPPORT.isBrowser ? window : undefined) {\n    return value;\n  },\n\n  eventOptions({\n    passive = true,\n    capture = false\n  } = {}) {\n    return {\n      passive,\n      capture\n    };\n  },\n\n  transform(value = identity) {\n    return value;\n  }\n\n};\n\nconst _excluded = [\"target\", \"eventOptions\", \"window\", \"enabled\", \"transform\"];\nfunction resolveWith(config = {}, resolvers) {\n  const result = {};\n\n  for (const [key, resolver] of Object.entries(resolvers)) switch (typeof resolver) {\n    case 'function':\n      result[key] = resolver.call(result, config[key], key, config);\n      break;\n\n    case 'object':\n      result[key] = resolveWith(config[key], resolver);\n      break;\n\n    case 'boolean':\n      if (resolver) result[key] = config[key];\n      break;\n  }\n\n  return result;\n}\nfunction parse(config, gestureKey) {\n  const _ref = config,\n        {\n    target,\n    eventOptions,\n    window,\n    enabled,\n    transform\n  } = _ref,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n  const _config = {\n    shared: resolveWith({\n      target,\n      eventOptions,\n      window,\n      enabled\n    }, sharedConfigResolver)\n  };\n\n  if (gestureKey) {\n    const resolver = ConfigResolverMap.get(gestureKey);\n    _config[gestureKey] = resolveWith(_objectSpread2({\n      shared: _config.shared\n    }, rest), resolver);\n  } else {\n    for (const key in rest) {\n      const resolver = ConfigResolverMap.get(key);\n\n      if (process.env.NODE_ENV === 'development') {\n        if (!resolver) console.warn(`[@use-gesture]: You've created a custom handler that that uses the \\`${key}\\` gesture but isn't properly configured.\\n\\nPlease add \\`${key}Action\\` when creating your handler.`);\n      }\n\n      _config[key] = resolveWith(_objectSpread2({\n        shared: _config.shared\n      }, rest[key]), resolver);\n    }\n  }\n\n  return _config;\n}\n\nclass EventStore {\n  constructor(ctrl) {\n    _defineProperty(this, \"_listeners\", []);\n\n    this._ctrl = ctrl;\n  }\n\n  add(element, device, action, handler, options) {\n    const type = toDomEventType(device, action);\n\n    const eventOptions = _objectSpread2(_objectSpread2({}, this._ctrl.config.shared.eventOptions), options);\n\n    element.addEventListener(type, handler, eventOptions);\n\n    this._listeners.push(() => element.removeEventListener(type, handler, eventOptions));\n  }\n\n  clean() {\n    this._listeners.forEach(remove => remove());\n\n    this._listeners = [];\n  }\n\n}\n\nclass TimeoutStore {\n  constructor() {\n    _defineProperty(this, \"_timeouts\", new Map());\n  }\n\n  add(key, callback, ms = 140, ...args) {\n    this.remove(key);\n\n    this._timeouts.set(key, window.setTimeout(callback, ms, ...args));\n  }\n\n  remove(key) {\n    const timeout = this._timeouts.get(key);\n\n    if (timeout) window.clearTimeout(timeout);\n  }\n\n  clean() {\n    this._timeouts.forEach(timeout => void window.clearTimeout(timeout));\n\n    this._timeouts.clear();\n  }\n\n}\n\nclass Controller {\n  constructor(handlers) {\n    _defineProperty(this, \"gestures\", new Set());\n\n    _defineProperty(this, \"_targetEventStore\", new EventStore(this));\n\n    _defineProperty(this, \"gestureEventStores\", {});\n\n    _defineProperty(this, \"gestureTimeoutStores\", {});\n\n    _defineProperty(this, \"handlers\", {});\n\n    _defineProperty(this, \"config\", {});\n\n    _defineProperty(this, \"pointerIds\", new Set());\n\n    _defineProperty(this, \"touchIds\", new Set());\n\n    _defineProperty(this, \"state\", {\n      shared: {\n        shiftKey: false,\n        metaKey: false,\n        ctrlKey: false,\n        altKey: false\n      }\n    });\n\n    resolveGestures(this, handlers);\n  }\n\n  setEventIds(event) {\n    if (isTouch(event)) {\n      this.touchIds = new Set(touchIds(event));\n    } else if ('pointerId' in event) {\n      if (event.type === 'pointerup') this.pointerIds.delete(event.pointerId);else this.pointerIds.add(event.pointerId);\n    }\n  }\n\n  applyHandlers(handlers, nativeHandlers) {\n    this.handlers = handlers;\n    this.nativeHandlers = nativeHandlers;\n  }\n\n  applyConfig(config, gestureKey) {\n    this.config = parse(config, gestureKey);\n  }\n\n  clean() {\n    this._targetEventStore.clean();\n\n    for (const key of this.gestures) {\n      this.gestureEventStores[key].clean();\n      this.gestureTimeoutStores[key].clean();\n    }\n  }\n\n  effect() {\n    if (this.config.shared.target) this.bind();\n    return () => this._targetEventStore.clean();\n  }\n\n  bind(...args) {\n    const sharedConfig = this.config.shared;\n    const eventOptions = sharedConfig.eventOptions;\n    const props = {};\n    let target;\n\n    if (sharedConfig.target) {\n      target = sharedConfig.target();\n      if (!target) return;\n    }\n\n    const bindFunction = bindToProps(props, eventOptions, !!target);\n\n    if (sharedConfig.enabled) {\n      for (const gestureKey of this.gestures) {\n        if (this.config[gestureKey].enabled) {\n          const Engine = EngineMap.get(gestureKey);\n          new Engine(this, args, gestureKey).bind(bindFunction);\n        }\n      }\n\n      for (const eventKey in this.nativeHandlers) {\n        bindFunction(eventKey, '', event => this.nativeHandlers[eventKey](_objectSpread2(_objectSpread2({}, this.state.shared), {}, {\n          event,\n          args\n        })), undefined, true);\n      }\n    }\n\n    for (const handlerProp in props) {\n      props[handlerProp] = chain(...props[handlerProp]);\n    }\n\n    if (!target) return props;\n\n    for (const handlerProp in props) {\n      let eventKey = handlerProp.substr(2).toLowerCase();\n      const capture = !!~eventKey.indexOf('capture');\n      const passive = !!~eventKey.indexOf('passive');\n      if (capture || passive) eventKey = eventKey.replace(/capture|passive/g, '');\n\n      this._targetEventStore.add(target, eventKey, '', props[handlerProp], {\n        capture,\n        passive\n      });\n    }\n  }\n\n}\n\nfunction setupGesture(ctrl, gestureKey) {\n  ctrl.gestures.add(gestureKey);\n  ctrl.gestureEventStores[gestureKey] = new EventStore(ctrl);\n  ctrl.gestureTimeoutStores[gestureKey] = new TimeoutStore();\n}\n\nfunction resolveGestures(ctrl, internalHandlers) {\n  if (internalHandlers.drag) setupGesture(ctrl, 'drag');\n  if (internalHandlers.wheel) setupGesture(ctrl, 'wheel');\n  if (internalHandlers.scroll) setupGesture(ctrl, 'scroll');\n  if (internalHandlers.move) setupGesture(ctrl, 'move');\n  if (internalHandlers.pinch) setupGesture(ctrl, 'pinch');\n  if (internalHandlers.hover) setupGesture(ctrl, 'hover');\n}\n\nconst bindToProps = (props, eventOptions, withPassiveOption) => (device, action, handler, options = {}, isNative = false) => {\n  var _options$capture, _options$passive;\n\n  const capture = (_options$capture = options.capture) !== null && _options$capture !== void 0 ? _options$capture : eventOptions.capture;\n  const passive = (_options$passive = options.passive) !== null && _options$passive !== void 0 ? _options$passive : eventOptions.passive;\n  let handlerProp = isNative ? device : toHandlerProp(device, action, capture);\n  if (withPassiveOption && passive) handlerProp += 'Passive';\n  props[handlerProp] = props[handlerProp] || [];\n  props[handlerProp].push(handler);\n};\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\n\nfunction sortHandlers(_handlers) {\n  const native = {};\n  const handlers = {};\n  const actions = new Set();\n\n  for (let key in _handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch);\n      handlers[key] = _handlers[key];\n    } else {\n      native[key] = _handlers[key];\n    }\n  }\n\n  return [handlers, native, actions];\n}\n\nfunction registerGesture(actions, handlers, handlerKey, key, internalHandlers, config) {\n  if (!actions.has(handlerKey)) return;\n  const startKey = handlerKey + 'Start';\n  const endKey = handlerKey + 'End';\n\n  const fn = state => {\n    let memo = undefined;\n    if (state.first && startKey in handlers) handlers[startKey](state);\n    if (handlerKey in handlers) memo = handlers[handlerKey](state);\n    if (state.last && endKey in handlers) handlers[endKey](state);\n    return memo;\n  };\n\n  internalHandlers[key] = fn;\n  config[key] = config[key] || {};\n}\n\nfunction parseMergedHandlers(mergedHandlers, mergedConfig) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(mergedHandlers);\n  const internalHandlers = {};\n  registerGesture(actions, handlers, 'onDrag', 'drag', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onWheel', 'wheel', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onScroll', 'scroll', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onPinch', 'pinch', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onMove', 'move', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onHover', 'hover', internalHandlers, mergedConfig);\n  return {\n    handlers: internalHandlers,\n    config: mergedConfig,\n    nativeHandlers\n  };\n}\n\nexport { Controller, parseMergedHandlers };\n"]},"metadata":{},"sourceType":"module"}